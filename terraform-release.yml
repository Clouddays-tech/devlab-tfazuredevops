trigger: none  # No automatic trigger from code changes
pr: none

resources:
  pipelines:
    - pipeline: 'Terraform-Plan-Out'  # Alias for the pipeline you depend on
      source: 'Terraform-Plan-Out'  # Name of the build pipeline to depend on
      trigger:
        branches:
          include:
            - main  # Trigger this pipeline when the 'main' branch is built in the build pipeline

variables:
- group: devlab-kv002-vars

pool:
  name: Azure Pipelines

steps:
- task: DownloadBuildArtifacts@1
  inputs:
    buildType: 'specific'
    project: '7300f65c-69b6-428a-be7e-87b7895dc991'
    pipeline: '8'
    specificBuildWithTriggering: true
    buildVersionToDownload: 'latest'
    downloadType: 'single'
    downloadPath: '$(System.ArtifactsDirectory)'

- task: CmdLine@2
  inputs:
    script: |
      pwd
      ls -al /home/vsts/work/1/a/
      find /home/vsts/work/1/a/ -maxdepth 3
      find . -name *.gz -maxdepth 3

- task: Bash@3
  displayName: 'Capture Plan Pipeline Build-ID'
  inputs:
    targetType: 'inline'
    script: |
      # Find the file that matches the pattern '*-tfplan.tgz'
      fileName=$(ls $(System.ArtifactsDirectory)/*-tfplan.tgz)
      
      # Extract the build ID by removing the '-tfplan.tgz' suffix from the filename
      buildId=$(basename $fileName -tfplan.tgz)

      # Set the PlanBuildId variable for later tasks
      echo "##vso[task.setvariable variable=PlanBuildId]$buildId"
      echo "Build ID: $buildId"
      echo "Plan Build ID: $PlanBuildId"
      
- task: ExtractFiles@1
  displayName: ExtractFiles
  inputs:
    archiveFilePatterns: '$(System.ArtifactsDirectory)/$(PlanBuildId)-tfplan.tgz'
    destinationFolder: '$(System.DefaultWorkingDirectory)/'
    cleanDestinationFolder: false
    overwriteExistingFiles: false
      
# - task: ManualValidation@1
#   inputs:
#     notifyUsers: 'clouddays.info@gmail.com'
#     instructions: 'Please review the Terraform plan and approve to apply in Production.'

- task: TerraformInstaller@2
  displayName: Install Terraform 0.14.6
  inputs:
    terraformVersion: '0.14.6'

- task: TerraformCLI@2
  displayName: Terraform Init
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    commandOptions: '-backend-config="access_key=$(devlabstg-key1)"'
    allowTelemetryCollection: false

- task: TerraformCLI@2
  inputs:
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    commandOptions: '-auto-approve -input=false tfplan'
    allowTelemetryCollection: false
