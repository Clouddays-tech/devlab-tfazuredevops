# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


trigger:
  branches:
    include:
    - main
  paths:
    include:
    - terraform/


pool:
  name: Azure Pipelines

variables:
- group: devlab-kv002-vars

steps:
 - task: TerraformInstaller@0
   displayName: Install Terraform 0.14.6
   inputs:
     terraformVersion: '0.14.6'

 - task: TerraformCLI@2
   displayName: Terraform Init
   inputs:
      command: 'init'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
      commandOptions: '-backend-config="access_key=$(devlabstg-key1)"'
      allowTelemetryCollection: false

 - task: TerraformCLI@2
   displayName: Terraform Validate
   inputs:
     command: 'validate'
     workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
     allowTelemetryCollection: true

 - task: TerraformCLI@2
   displayName: Terraform Plan
   inputs:
     command: 'plan'
     workingDirectory: 'terraform'
     commandOptions: '-input=false -out=tfplan -var="spn-client-id=${demolab-spn-client-id}" -var="spn-client-secret=${demolab-spn-client-secret}" -var="spn-tenant-id=${demolab-spn-tenant-id}"'
     allowTelemetryCollection: false
  
 - task: ArchiveFiles@2
   displayName: Archive Terraform plan file
   inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)/terraform'
    includeRootFolder: true
    archiveType: 'tar'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-tfplan.tgz'
    replaceExistingArchive: true
 - task: CmdLine@2
   inputs:
    script: |
      echo display-BuildDir
      echo $(Build.BinariesDirectory) 
      
      echo display-systemdefault
      echo$(System.DefaultWorkingDirectory)/
 
